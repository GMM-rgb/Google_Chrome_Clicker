name: Deploy Express App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Setup project structure
        run: |
          mkdir -p build/public
          cp -r public/* build/public/ || true
          cp server.js build/
          cp package.json build/
          cp package-lock.json build/ || true
      
      - name: Create Procfile for hosting platforms
        run: |
          echo "web: node server.js" > build/Procfile
        
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh
        
      - name: Set Heroku remote
        run: |
          if [ -n "${{ secrets.HEROKU_APP_NAME }}" ]; then
            heroku git:remote -a "${{ secrets.HEROKU_APP_NAME }}"
          else
            echo "HEROKU_APP_NAME is not set"
            exit 1
          fi
        
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "build"

# The deploy.yml workflow file is similar to the express.yml workflow file, but with a few key differences:
# - The deploy.yml workflow file is triggered by a push event on the main branch.
# - The deploy.yml workflow file sets up the project structure by creating a build directory and copying the necessary files into it.
# - The deploy.yml workflow file creates a Procfile for hosting platforms.
# - The deploy.yml workflow file installs the Heroku CLI and sets the Heroku remote.
# - The deploy.yml workflow file deploys the application to Heroku using the akhileshns/heroku-deploy action.